name: release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Get that version number
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      
      - uses: kentik/pkg@v1.0.0-rc6
        with:
          name: argos-installer
          version: ${{ env.RELEASE_VERSION }}
          arch: x86_64
          format: deb
          package: package.yaml

      - uses: kentik/pkg@v1.0.0-rc6
        with:
          name: argos-installer
          version: ${{ env.RELEASE_VERSION }}
          arch: x86_64
          format: rpm
          package: package.yaml

      - uses: actions/upload-artifact@v2
        with:
          name: artifact-deb
          path: |
            ./*.deb

      - uses: actions/upload-artifact@v2
        with:
          name: artifact-rpm
          path: |
            ./*.rpm
            !./*-debuginfo-*.rpm
  create-release:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - uses: actions/checkout@v1
      - name: Generate changelog
        run: |
          wget https://github.com/git-chglog/git-chglog/releases/download/0.9.1/git-chglog_linux_amd64
          chmod +x git-chglog_linux_amd64
          mv git-chglog_linux_amd64 git-chglog
          ./git-chglog --output ./changelog $(git describe --tags $(git rev-list --tags --max-count=1))
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: ./changelog
          draft: false
          prerelease: false

      - name: Write upload_url to file
        run: echo '${{ steps.create-release.outputs.upload_url }}' > upload_url.txt

      - uses: actions/upload-artifact@v2
        with:
          name: create-release
          path: upload_url.txt
  upload:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        include:
          - pkg: deb
            asset_content_type: application/vnd.debian.binary-package
          - pkg: rpm
            asset_content_type: application/x-rpm
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact-${{ matrix.pkg }}

      - uses: actions/download-artifact@v2
        with:
          name: create-release

      - id: vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"
          echo "::set-output name=asset_name::$(ls *.${{ matrix.pkg }} | head -n 1)"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: ${{ steps.vars.outputs.asset_name }}
          asset_name: ${{ steps.vars.outputs.asset_name }}
          asset_content_type: ${{ matrix.asset_content_type }}
